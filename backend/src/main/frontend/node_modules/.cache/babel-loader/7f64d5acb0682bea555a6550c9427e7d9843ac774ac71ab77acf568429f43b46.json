{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keydownBehavior = void 0;\nvar _utils = require(\"../../utils\");\n\n/**\n * This file should contain behavior for arrow keys as described here:\n * https://w3c.github.io/uievents-code/#key-arrowpad-section\n */\nvar keydownBehavior = [{\n  // TODO: implement for contentEditable\n  matches: function matches(keyDef, element) {\n    return (keyDef.key === 'ArrowLeft' || keyDef.key === 'ArrowRight') && (0, _utils.isElementType)(element, ['input', 'textarea']);\n  },\n  handle: function handle(keyDef, element) {\n    var _ref;\n    var _ref2 = (0, _utils.getSelectionRange)(element),\n      selectionStart = _ref2.selectionStart,\n      selectionEnd = _ref2.selectionEnd;\n    var direction = keyDef.key === 'ArrowLeft' ? -1 : 1;\n    var newPos = (_ref = selectionStart === selectionEnd ? (selectionStart != null ? selectionStart : /* istanbul ignore next */\n    0) + direction : direction < 0 ? selectionStart : selectionEnd) != null ? _ref : /* istanbul ignore next */\n    0;\n    (0, _utils.setSelectionRange)(element, newPos, newPos);\n  }\n}];\nexports.keydownBehavior = keydownBehavior;","map":{"version":3,"names":["Object","defineProperty","exports","value","keydownBehavior","_utils","require","matches","keyDef","element","key","isElementType","handle","_ref","_ref2","getSelectionRange","selectionStart","selectionEnd","direction","newPos","setSelectionRange"],"sources":["C:/Users/user/Desktop/git/toy/src/main/frontend/node_modules/@testing-library/user-event/dist/keyboard/plugins/arrow.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keydownBehavior = void 0;\n\nvar _utils = require(\"../../utils\");\n\n/**\n * This file should contain behavior for arrow keys as described here:\n * https://w3c.github.io/uievents-code/#key-arrowpad-section\n */\nconst keydownBehavior = [{\n  // TODO: implement for contentEditable\n  matches: (keyDef, element) => (keyDef.key === 'ArrowLeft' || keyDef.key === 'ArrowRight') && (0, _utils.isElementType)(element, ['input', 'textarea']),\n  handle: (keyDef, element) => {\n    var _ref;\n\n    const {\n      selectionStart,\n      selectionEnd\n    } = (0, _utils.getSelectionRange)(element);\n    const direction = keyDef.key === 'ArrowLeft' ? -1 : 1;\n    const newPos = (_ref = selectionStart === selectionEnd ? (selectionStart != null ? selectionStart :\n    /* istanbul ignore next */\n    0) + direction : direction < 0 ? selectionStart : selectionEnd) != null ? _ref :\n    /* istanbul ignore next */\n    0;\n    (0, _utils.setSelectionRange)(element, newPos, newPos);\n  }\n}];\nexports.keydownBehavior = keydownBehavior;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAEhC,IAAIC,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAEnC;AACA;AACA;AACA;AACA,IAAMF,eAAe,GAAG,CAAC;EACvB;EACAG,OAAO,EAAE,SAAAA,QAACC,MAAM,EAAEC,OAAO;IAAA,OAAK,CAACD,MAAM,CAACE,GAAG,KAAK,WAAW,IAAIF,MAAM,CAACE,GAAG,KAAK,YAAY,KAAK,CAAC,CAAC,EAAEL,MAAM,CAACM,aAAa,EAAEF,OAAO,EAAE,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;EAAA;EACtJG,MAAM,EAAE,SAAAA,OAACJ,MAAM,EAAEC,OAAO,EAAK;IAC3B,IAAII,IAAI;IAER,IAAAC,KAAA,GAGI,CAAC,CAAC,EAAET,MAAM,CAACU,iBAAiB,EAAEN,OAAO,CAAC;MAFxCO,cAAc,GAAAF,KAAA,CAAdE,cAAc;MACdC,YAAY,GAAAH,KAAA,CAAZG,YAAY;IAEd,IAAMC,SAAS,GAAGV,MAAM,CAACE,GAAG,KAAK,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC;IACrD,IAAMS,MAAM,GAAG,CAACN,IAAI,GAAGG,cAAc,KAAKC,YAAY,GAAG,CAACD,cAAc,IAAI,IAAI,GAAGA,cAAc,GACjG;IACA,CAAC,IAAIE,SAAS,GAAGA,SAAS,GAAG,CAAC,GAAGF,cAAc,GAAGC,YAAY,KAAK,IAAI,GAAGJ,IAAI,GAC9E;IACA,CAAC;IACD,CAAC,CAAC,EAAER,MAAM,CAACe,iBAAiB,EAAEX,OAAO,EAAEU,MAAM,EAAEA,MAAM,CAAC;EACxD;AACF,CAAC,CAAC;AACFjB,OAAO,CAACE,eAAe,GAAGA,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}