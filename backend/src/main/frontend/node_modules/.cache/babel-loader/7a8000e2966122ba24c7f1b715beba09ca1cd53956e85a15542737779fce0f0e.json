{"ast":null,"code":"'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\nconst compile = function (ast) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let walk = function (node) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n    if (node.type === 'open') {\n      return invalid ? prefix + node.value : '(';\n    }\n    if (node.type === 'close') {\n      return invalid ? prefix + node.value : ')';\n    }\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';\n    }\n    if (node.value) {\n      return node.value;\n    }\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, {\n        ...options,\n        wrap: false,\n        toRegex: true\n      });\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n  return walk(ast);\n};\nmodule.exports = compile;","map":{"version":3,"names":["fill","require","utils","compile","ast","options","arguments","length","undefined","walk","node","parent","invalidBlock","isInvalidBrace","invalidNode","invalid","escapeInvalid","prefix","output","isOpen","value","isClose","type","prev","nodes","ranges","args","reduce","range","wrap","toRegex","child","module","exports"],"sources":["C:/Users/user/Desktop/git/toy/src/main/frontend/node_modules/braces/lib/compile.js"],"sourcesContent":["'use strict';\n\nconst fill = require('fill-range');\nconst utils = require('./utils');\n\nconst compile = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nmodule.exports = compile;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,YAAY,CAAC;AAClC,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAEhC,MAAME,OAAO,GAAG,SAAAA,CAACC,GAAG,EAAmB;EAAA,IAAjBC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChC,IAAIG,IAAI,GAAG,SAAAA,CAACC,IAAI,EAAkB;IAAA,IAAhBC,MAAM,GAAAL,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAC3B,IAAIM,YAAY,GAAGV,KAAK,CAACW,cAAc,CAACF,MAAM,CAAC;IAC/C,IAAIG,WAAW,GAAGJ,IAAI,CAACK,OAAO,KAAK,IAAI,IAAIV,OAAO,CAACW,aAAa,KAAK,IAAI;IACzE,IAAID,OAAO,GAAGH,YAAY,KAAK,IAAI,IAAIE,WAAW,KAAK,IAAI;IAC3D,IAAIG,MAAM,GAAGZ,OAAO,CAACW,aAAa,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;IACvD,IAAIE,MAAM,GAAG,EAAE;IAEf,IAAIR,IAAI,CAACS,MAAM,KAAK,IAAI,EAAE;MACxB,OAAOF,MAAM,GAAGP,IAAI,CAACU,KAAK;IAC5B;IACA,IAAIV,IAAI,CAACW,OAAO,KAAK,IAAI,EAAE;MACzB,OAAOJ,MAAM,GAAGP,IAAI,CAACU,KAAK;IAC5B;IAEA,IAAIV,IAAI,CAACY,IAAI,KAAK,MAAM,EAAE;MACxB,OAAOP,OAAO,GAAIE,MAAM,GAAGP,IAAI,CAACU,KAAK,GAAI,GAAG;IAC9C;IAEA,IAAIV,IAAI,CAACY,IAAI,KAAK,OAAO,EAAE;MACzB,OAAOP,OAAO,GAAIE,MAAM,GAAGP,IAAI,CAACU,KAAK,GAAI,GAAG;IAC9C;IAEA,IAAIV,IAAI,CAACY,IAAI,KAAK,OAAO,EAAE;MACzB,OAAOZ,IAAI,CAACa,IAAI,CAACD,IAAI,KAAK,OAAO,GAAG,EAAE,GAAIP,OAAO,GAAGL,IAAI,CAACU,KAAK,GAAG,GAAI;IACvE;IAEA,IAAIV,IAAI,CAACU,KAAK,EAAE;MACd,OAAOV,IAAI,CAACU,KAAK;IACnB;IAEA,IAAIV,IAAI,CAACc,KAAK,IAAId,IAAI,CAACe,MAAM,GAAG,CAAC,EAAE;MACjC,IAAIC,IAAI,GAAGxB,KAAK,CAACyB,MAAM,CAACjB,IAAI,CAACc,KAAK,CAAC;MACnC,IAAII,KAAK,GAAG5B,IAAI,CAAC,GAAG0B,IAAI,EAAE;QAAE,GAAGrB,OAAO;QAAEwB,IAAI,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAK,CAAC,CAAC;MAErE,IAAIF,KAAK,CAACrB,MAAM,KAAK,CAAC,EAAE;QACtB,OAAOmB,IAAI,CAACnB,MAAM,GAAG,CAAC,IAAIqB,KAAK,CAACrB,MAAM,GAAG,CAAC,GAAI,IAAGqB,KAAM,GAAE,GAAGA,KAAK;MACnE;IACF;IAEA,IAAIlB,IAAI,CAACc,KAAK,EAAE;MACd,KAAK,IAAIO,KAAK,IAAIrB,IAAI,CAACc,KAAK,EAAE;QAC5BN,MAAM,IAAIT,IAAI,CAACsB,KAAK,EAAErB,IAAI,CAAC;MAC7B;IACF;IACA,OAAOQ,MAAM;EACf,CAAC;EAED,OAAOT,IAAI,CAACL,GAAG,CAAC;AAClB,CAAC;AAED4B,MAAM,CAACC,OAAO,GAAG9B,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}