{"ast":null,"code":"'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\nconst append = function () {\n  let queue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let stash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  let enclose = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let result = [];\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : item + ele);\n      }\n    }\n  }\n  return utils.flatten(result);\n};\nconst expand = function (ast) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n  let walk = function (node) {\n    let parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    node.queue = [];\n    let p = parent;\n    let q = parent.queue;\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n    let enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n    return queue;\n  };\n  return utils.flatten(walk(ast));\n};\nmodule.exports = expand;","map":{"version":3,"names":["fill","require","stringify","utils","append","queue","arguments","length","undefined","stash","enclose","result","concat","flatten","map","ele","item","Array","isArray","value","push","expand","ast","options","rangeLimit","walk","node","parent","p","q","type","invalid","dollar","pop","nodes","ranges","args","reduce","exceedsLimit","step","RangeError","range","encloseBrace","block","i","child","module","exports"],"sources":["C:/Users/user/Desktop/git/toy/src/main/frontend/node_modules/braces/lib/expand.js"],"sourcesContent":["'use strict';\n\nconst fill = require('fill-range');\nconst stringify = require('./stringify');\nconst utils = require('./utils');\n\nconst append = (queue = '', stash = '', enclose = false) => {\n  let result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));\n      }\n    }\n  }\n  return utils.flatten(result);\n};\n\nconst expand = (ast, options = {}) => {\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n\n  let walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append(q.pop(), stringify(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils.reduce(node.nodes);\n\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify(node, options);\n      }\n\n      q.push(append(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    let enclose = utils.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils.flatten(walk(ast));\n};\n\nmodule.exports = expand;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}