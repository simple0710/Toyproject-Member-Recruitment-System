{"ast":null,"code":"var httpNative = require('http'),\n  httpsNative = require('https'),\n  web_o = require('./web-outgoing'),\n  common = require('../common'),\n  followRedirects = require('follow-redirects');\nweb_o = Object.keys(web_o).map(function (pass) {\n  return web_o[pass];\n});\nvar nativeAgents = {\n  http: httpNative,\n  https: httpsNative\n};\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\nmodule.exports = {\n  /**\n   * Sets `content-length` to '0' if request is of DELETE type.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  deleteLength: function deleteLength(req, res, options) {\n    if ((req.method === 'DELETE' || req.method === 'OPTIONS') && !req.headers['content-length']) {\n      req.headers['content-length'] = '0';\n      delete req.headers['transfer-encoding'];\n    }\n  },\n  /**\n   * Sets timeout in request socket if it was specified in options.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  timeout: function timeout(req, res, options) {\n    if (options.timeout) {\n      req.socket.setTimeout(options.timeout);\n    }\n  },\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders: function XHeaders(req, res, options) {\n    if (!options.xfwd) return;\n    var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\n    var values = {\n      for: req.connection.remoteAddress || req.socket.remoteAddress,\n      port: common.getPort(req),\n      proto: encrypted ? 'https' : 'http'\n    };\n    ['for', 'port', 'proto'].forEach(function (header) {\n      req.headers['x-forwarded-' + header] = (req.headers['x-forwarded-' + header] || '') + (req.headers['x-forwarded-' + header] ? ',' : '') + values[header];\n    });\n    req.headers['x-forwarded-host'] = req.headers['x-forwarded-host'] || req.headers['host'] || '';\n  },\n  /**\n   * Does the actual proxying. If `forward` is enabled fires up\n   * a ForwardStream, same happens for ProxyStream. The request\n   * just dies otherwise.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  stream: function stream(req, res, options, _, server, clb) {\n    // And we begin!\n    server.emit('start', req, res, options.target || options.forward);\n    var agents = options.followRedirects ? followRedirects : nativeAgents;\n    var http = agents.http;\n    var https = agents.https;\n    if (options.forward) {\n      // If forward enable, so just pipe the request\n      var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(common.setupOutgoing(options.ssl || {}, options, req, 'forward'));\n\n      // error handler (e.g. ECONNRESET, ECONNREFUSED)\n      // Handle errors on incoming request as well as it makes sense to\n      var forwardError = createErrorHandler(forwardReq, options.forward);\n      req.on('error', forwardError);\n      forwardReq.on('error', forwardError);\n      (options.buffer || req).pipe(forwardReq);\n      if (!options.target) {\n        return res.end();\n      }\n    }\n\n    // Request initalization\n    var proxyReq = (options.target.protocol === 'https:' ? https : http).request(common.setupOutgoing(options.ssl || {}, options, req));\n\n    // Enable developers to modify the proxyReq before headers are sent\n    proxyReq.on('socket', function (socket) {\n      if (server && !proxyReq.getHeader('expect')) {\n        server.emit('proxyReq', proxyReq, req, res, options);\n      }\n    });\n\n    // allow outgoing socket to timeout so that we could\n    // show an error page at the initial request\n    if (options.proxyTimeout) {\n      proxyReq.setTimeout(options.proxyTimeout, function () {\n        proxyReq.abort();\n      });\n    }\n\n    // Ensure we abort proxy if request is aborted\n    req.on('aborted', function () {\n      proxyReq.abort();\n    });\n\n    // handle errors in proxy and incoming request, just like for forward proxy\n    var proxyError = createErrorHandler(proxyReq, options.target);\n    req.on('error', proxyError);\n    proxyReq.on('error', proxyError);\n    function createErrorHandler(proxyReq, url) {\n      return function proxyError(err) {\n        if (req.socket.destroyed && err.code === 'ECONNRESET') {\n          server.emit('econnreset', err, req, res, url);\n          return proxyReq.abort();\n        }\n        if (clb) {\n          clb(err, req, res, url);\n        } else {\n          server.emit('error', err, req, res, url);\n        }\n      };\n    }\n    (options.buffer || req).pipe(proxyReq);\n    proxyReq.on('response', function (proxyRes) {\n      if (server) {\n        server.emit('proxyRes', proxyRes, req, res);\n      }\n      if (!res.headersSent && !options.selfHandleResponse) {\n        for (var i = 0; i < web_o.length; i++) {\n          if (web_o[i](req, res, proxyRes, options)) {\n            break;\n          }\n        }\n      }\n      if (!res.finished) {\n        // Allow us to listen when the proxy has completed\n        proxyRes.on('end', function () {\n          if (server) server.emit('end', req, res, proxyRes);\n        });\n        // We pipe to the response unless its expected to be handled by the user\n        if (!options.selfHandleResponse) proxyRes.pipe(res);\n      } else {\n        if (server) server.emit('end', req, res, proxyRes);\n      }\n    });\n  }\n};","map":{"version":3,"names":["httpNative","require","httpsNative","web_o","common","followRedirects","Object","keys","map","pass","nativeAgents","http","https","module","exports","deleteLength","req","res","options","method","headers","timeout","socket","setTimeout","XHeaders","xfwd","encrypted","isSpdy","hasEncryptedConnection","values","for","connection","remoteAddress","port","getPort","proto","forEach","header","stream","_","server","clb","emit","target","forward","agents","forwardReq","protocol","request","setupOutgoing","ssl","forwardError","createErrorHandler","on","buffer","pipe","end","proxyReq","getHeader","proxyTimeout","abort","proxyError","url","err","destroyed","code","proxyRes","headersSent","selfHandleResponse","i","length","finished"],"sources":["C:/Users/user/Desktop/git/toy/src/main/frontend/node_modules/http-proxy/lib/http-proxy/passes/web-incoming.js"],"sourcesContent":["var httpNative   = require('http'),\n    httpsNative  = require('https'),\n    web_o  = require('./web-outgoing'),\n    common = require('../common'),\n    followRedirects = require('follow-redirects');\n\nweb_o = Object.keys(web_o).map(function(pass) {\n  return web_o[pass];\n});\n\nvar nativeAgents = { http: httpNative, https: httpsNative };\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n\nmodule.exports = {\n\n  /**\n   * Sets `content-length` to '0' if request is of DELETE type.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  deleteLength: function deleteLength(req, res, options) {\n    if((req.method === 'DELETE' || req.method === 'OPTIONS')\n       && !req.headers['content-length']) {\n      req.headers['content-length'] = '0';\n      delete req.headers['transfer-encoding'];\n    }\n  },\n\n  /**\n   * Sets timeout in request socket if it was specified in options.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  timeout: function timeout(req, res, options) {\n    if(options.timeout) {\n      req.socket.setTimeout(options.timeout);\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders: function XHeaders(req, res, options) {\n    if(!options.xfwd) return;\n\n    var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common.getPort(req),\n      proto: encrypted ? 'https' : 'http'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n\n    req.headers['x-forwarded-host'] = req.headers['x-forwarded-host'] || req.headers['host'] || '';\n  },\n\n  /**\n   * Does the actual proxying. If `forward` is enabled fires up\n   * a ForwardStream, same happens for ProxyStream. The request\n   * just dies otherwise.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  stream: function stream(req, res, options, _, server, clb) {\n\n    // And we begin!\n    server.emit('start', req, res, options.target || options.forward);\n\n    var agents = options.followRedirects ? followRedirects : nativeAgents;\n    var http = agents.http;\n    var https = agents.https;\n\n    if(options.forward) {\n      // If forward enable, so just pipe the request\n      var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(\n        common.setupOutgoing(options.ssl || {}, options, req, 'forward')\n      );\n\n      // error handler (e.g. ECONNRESET, ECONNREFUSED)\n      // Handle errors on incoming request as well as it makes sense to\n      var forwardError = createErrorHandler(forwardReq, options.forward);\n      req.on('error', forwardError);\n      forwardReq.on('error', forwardError);\n\n      (options.buffer || req).pipe(forwardReq);\n      if(!options.target) { return res.end(); }\n    }\n\n    // Request initalization\n    var proxyReq = (options.target.protocol === 'https:' ? https : http).request(\n      common.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    proxyReq.on('socket', function(socket) {\n      if(server && !proxyReq.getHeader('expect')) {\n        server.emit('proxyReq', proxyReq, req, res, options);\n      }\n    });\n\n    // allow outgoing socket to timeout so that we could\n    // show an error page at the initial request\n    if(options.proxyTimeout) {\n      proxyReq.setTimeout(options.proxyTimeout, function() {\n         proxyReq.abort();\n      });\n    }\n\n    // Ensure we abort proxy if request is aborted\n    req.on('aborted', function () {\n      proxyReq.abort();\n    });\n\n    // handle errors in proxy and incoming request, just like for forward proxy\n    var proxyError = createErrorHandler(proxyReq, options.target);\n    req.on('error', proxyError);\n    proxyReq.on('error', proxyError);\n\n    function createErrorHandler(proxyReq, url) {\n      return function proxyError(err) {\n        if (req.socket.destroyed && err.code === 'ECONNRESET') {\n          server.emit('econnreset', err, req, res, url);\n          return proxyReq.abort();\n        }\n\n        if (clb) {\n          clb(err, req, res, url);\n        } else {\n          server.emit('error', err, req, res, url);\n        }\n      }\n    }\n\n    (options.buffer || req).pipe(proxyReq);\n\n    proxyReq.on('response', function(proxyRes) {\n      if(server) { server.emit('proxyRes', proxyRes, req, res); }\n\n      if(!res.headersSent && !options.selfHandleResponse) {\n        for(var i=0; i < web_o.length; i++) {\n          if(web_o[i](req, res, proxyRes, options)) { break; }\n        }\n      }\n\n      if (!res.finished) {\n        // Allow us to listen when the proxy has completed\n        proxyRes.on('end', function () {\n          if (server) server.emit('end', req, res, proxyRes);\n        });\n        // We pipe to the response unless its expected to be handled by the user\n        if (!options.selfHandleResponse) proxyRes.pipe(res);\n      } else {\n        if (server) server.emit('end', req, res, proxyRes);\n      }\n    });\n  }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}