{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preKeyupBehavior = exports.preKeydownBehavior = exports.postKeyupBehavior = exports.keyupBehavior = exports.keypressBehavior = exports.keydownBehavior = void 0;\nvar _dom = require(\"@testing-library/dom\");\nvar _utils = require(\"../../utils\");\nvar _getEventProps = require(\"../getEventProps\");\nvar _shared = require(\"../shared\");\n\n/**\n * This file should contain behavior for functional keys as described here:\n * https://w3c.github.io/uievents-code/#key-alphanumeric-functional\n */\nconst modifierKeys = {\n  Alt: 'alt',\n  Control: 'ctrl',\n  Shift: 'shift',\n  Meta: 'meta'\n};\nconst preKeydownBehavior = [\n// modifierKeys switch on the modifier BEFORE the keydown event\n...Object.entries(modifierKeys).map(_ref => {\n  let [key, modKey] = _ref;\n  return {\n    matches: keyDef => keyDef.key === key,\n    handle: (keyDef, element, options, state) => {\n      state.modifiers[modKey] = true;\n    }\n  };\n}),\n// AltGraph produces an extra keydown for Control\n// The modifier does not change\n{\n  matches: keyDef => keyDef.key === 'AltGraph',\n  handle: (keyDef, element, options, state) => {\n    var _options$keyboardMap$;\n    const ctrlKeyDef = (_options$keyboardMap$ = options.keyboardMap.find(k => k.key === 'Control')) != null ? _options$keyboardMap$ : /* istanbul ignore next */\n    {\n      key: 'Control',\n      code: 'Control'\n    };\n    _dom.fireEvent.keyDown(element, (0, _getEventProps.getKeyEventProps)(ctrlKeyDef, state));\n  }\n}];\nexports.preKeydownBehavior = preKeydownBehavior;\nconst keydownBehavior = [{\n  matches: keyDef => keyDef.key === 'CapsLock',\n  handle: (keyDef, element, options, state) => {\n    state.modifiers.caps = !state.modifiers.caps;\n  }\n}, {\n  matches: (keyDef, element) => keyDef.key === 'Backspace' && (0, _utils.isEditable)(element) && !(0, _utils.isCursorAtStart)(element),\n  handle: (keyDef, element, options, state) => {\n    const {\n      newValue,\n      newSelectionStart\n    } = (0, _utils.calculateNewValue)('', element, state.carryValue, undefined, 'backward');\n    (0, _shared.fireInputEvent)(element, {\n      newValue,\n      newSelectionStart,\n      eventOverrides: {\n        inputType: 'deleteContentBackward'\n      }\n    });\n    (0, _shared.carryValue)(element, state, newValue);\n  }\n}];\nexports.keydownBehavior = keydownBehavior;\nconst keypressBehavior = [{\n  matches: (keyDef, element) => keyDef.key === 'Enter' && (0, _utils.isElementType)(element, 'input') && ['checkbox', 'radio'].includes(element.type),\n  handle: (keyDef, element) => {\n    const form = element.form;\n    if ((0, _utils.hasFormSubmit)(form)) {\n      _dom.fireEvent.submit(form);\n    }\n  }\n}, {\n  matches: (keyDef, element) => keyDef.key === 'Enter' && ((0, _utils.isClickableInput)(element) ||\n  // Links with href defined should handle Enter the same as a click\n  (0, _utils.isElementType)(element, 'a') && Boolean(element.href)),\n  handle: (keyDef, element, options, state) => {\n    _dom.fireEvent.click(element, (0, _getEventProps.getMouseEventProps)(state));\n  }\n}, {\n  matches: (keyDef, element) => keyDef.key === 'Enter' && (0, _utils.isElementType)(element, 'input'),\n  handle: (keyDef, element) => {\n    const form = element.form;\n    if (form && (form.querySelectorAll('input').length === 1 || (0, _utils.hasFormSubmit)(form))) {\n      _dom.fireEvent.submit(form);\n    }\n  }\n}];\nexports.keypressBehavior = keypressBehavior;\nconst preKeyupBehavior = [\n// modifierKeys switch off the modifier BEFORE the keyup event\n...Object.entries(modifierKeys).map(_ref2 => {\n  let [key, modKey] = _ref2;\n  return {\n    matches: keyDef => keyDef.key === key,\n    handle: (keyDef, element, options, state) => {\n      state.modifiers[modKey] = false;\n    }\n  };\n})];\nexports.preKeyupBehavior = preKeyupBehavior;\nconst keyupBehavior = [{\n  matches: (keyDef, element) => keyDef.key === ' ' && (0, _utils.isClickableInput)(element),\n  handle: (keyDef, element, options, state) => {\n    _dom.fireEvent.click(element, (0, _getEventProps.getMouseEventProps)(state));\n  }\n}];\nexports.keyupBehavior = keyupBehavior;\nconst postKeyupBehavior = [\n// AltGraph produces an extra keyup for Control\n// The modifier does not change\n{\n  matches: keyDef => keyDef.key === 'AltGraph',\n  handle: (keyDef, element, options, state) => {\n    var _options$keyboardMap$2;\n    const ctrlKeyDef = (_options$keyboardMap$2 = options.keyboardMap.find(k => k.key === 'Control')) != null ? _options$keyboardMap$2 : /* istanbul ignore next */\n    {\n      key: 'Control',\n      code: 'Control'\n    };\n    _dom.fireEvent.keyUp(element, (0, _getEventProps.getKeyEventProps)(ctrlKeyDef, state));\n  }\n}];\nexports.postKeyupBehavior = postKeyupBehavior;","map":{"version":3,"names":["Object","defineProperty","exports","value","preKeyupBehavior","preKeydownBehavior","postKeyupBehavior","keyupBehavior","keypressBehavior","keydownBehavior","_dom","require","_utils","_getEventProps","_shared","modifierKeys","Alt","Control","Shift","Meta","entries","map","_ref","key","modKey","matches","keyDef","handle","element","options","state","modifiers","_options$keyboardMap$","ctrlKeyDef","keyboardMap","find","k","code","fireEvent","keyDown","getKeyEventProps","caps","isEditable","isCursorAtStart","newValue","newSelectionStart","calculateNewValue","carryValue","undefined","fireInputEvent","eventOverrides","inputType","isElementType","includes","type","form","hasFormSubmit","submit","isClickableInput","Boolean","href","click","getMouseEventProps","querySelectorAll","length","_ref2","_options$keyboardMap$2","keyUp"],"sources":["C:/Users/user/Desktop/git/toy/src/main/frontend/node_modules/@testing-library/user-event/dist/keyboard/plugins/functional.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preKeyupBehavior = exports.preKeydownBehavior = exports.postKeyupBehavior = exports.keyupBehavior = exports.keypressBehavior = exports.keydownBehavior = void 0;\n\nvar _dom = require(\"@testing-library/dom\");\n\nvar _utils = require(\"../../utils\");\n\nvar _getEventProps = require(\"../getEventProps\");\n\nvar _shared = require(\"../shared\");\n\n/**\n * This file should contain behavior for functional keys as described here:\n * https://w3c.github.io/uievents-code/#key-alphanumeric-functional\n */\nconst modifierKeys = {\n  Alt: 'alt',\n  Control: 'ctrl',\n  Shift: 'shift',\n  Meta: 'meta'\n};\nconst preKeydownBehavior = [// modifierKeys switch on the modifier BEFORE the keydown event\n...Object.entries(modifierKeys).map(([key, modKey]) => ({\n  matches: keyDef => keyDef.key === key,\n  handle: (keyDef, element, options, state) => {\n    state.modifiers[modKey] = true;\n  }\n})), // AltGraph produces an extra keydown for Control\n// The modifier does not change\n{\n  matches: keyDef => keyDef.key === 'AltGraph',\n  handle: (keyDef, element, options, state) => {\n    var _options$keyboardMap$;\n\n    const ctrlKeyDef = (_options$keyboardMap$ = options.keyboardMap.find(k => k.key === 'Control')) != null ? _options$keyboardMap$ :\n    /* istanbul ignore next */\n    {\n      key: 'Control',\n      code: 'Control'\n    };\n\n    _dom.fireEvent.keyDown(element, (0, _getEventProps.getKeyEventProps)(ctrlKeyDef, state));\n  }\n}];\nexports.preKeydownBehavior = preKeydownBehavior;\nconst keydownBehavior = [{\n  matches: keyDef => keyDef.key === 'CapsLock',\n  handle: (keyDef, element, options, state) => {\n    state.modifiers.caps = !state.modifiers.caps;\n  }\n}, {\n  matches: (keyDef, element) => keyDef.key === 'Backspace' && (0, _utils.isEditable)(element) && !(0, _utils.isCursorAtStart)(element),\n  handle: (keyDef, element, options, state) => {\n    const {\n      newValue,\n      newSelectionStart\n    } = (0, _utils.calculateNewValue)('', element, state.carryValue, undefined, 'backward');\n    (0, _shared.fireInputEvent)(element, {\n      newValue,\n      newSelectionStart,\n      eventOverrides: {\n        inputType: 'deleteContentBackward'\n      }\n    });\n    (0, _shared.carryValue)(element, state, newValue);\n  }\n}];\nexports.keydownBehavior = keydownBehavior;\nconst keypressBehavior = [{\n  matches: (keyDef, element) => keyDef.key === 'Enter' && (0, _utils.isElementType)(element, 'input') && ['checkbox', 'radio'].includes(element.type),\n  handle: (keyDef, element) => {\n    const form = element.form;\n\n    if ((0, _utils.hasFormSubmit)(form)) {\n      _dom.fireEvent.submit(form);\n    }\n  }\n}, {\n  matches: (keyDef, element) => keyDef.key === 'Enter' && ((0, _utils.isClickableInput)(element) || // Links with href defined should handle Enter the same as a click\n  (0, _utils.isElementType)(element, 'a') && Boolean(element.href)),\n  handle: (keyDef, element, options, state) => {\n    _dom.fireEvent.click(element, (0, _getEventProps.getMouseEventProps)(state));\n  }\n}, {\n  matches: (keyDef, element) => keyDef.key === 'Enter' && (0, _utils.isElementType)(element, 'input'),\n  handle: (keyDef, element) => {\n    const form = element.form;\n\n    if (form && (form.querySelectorAll('input').length === 1 || (0, _utils.hasFormSubmit)(form))) {\n      _dom.fireEvent.submit(form);\n    }\n  }\n}];\nexports.keypressBehavior = keypressBehavior;\nconst preKeyupBehavior = [// modifierKeys switch off the modifier BEFORE the keyup event\n...Object.entries(modifierKeys).map(([key, modKey]) => ({\n  matches: keyDef => keyDef.key === key,\n  handle: (keyDef, element, options, state) => {\n    state.modifiers[modKey] = false;\n  }\n}))];\nexports.preKeyupBehavior = preKeyupBehavior;\nconst keyupBehavior = [{\n  matches: (keyDef, element) => keyDef.key === ' ' && (0, _utils.isClickableInput)(element),\n  handle: (keyDef, element, options, state) => {\n    _dom.fireEvent.click(element, (0, _getEventProps.getMouseEventProps)(state));\n  }\n}];\nexports.keyupBehavior = keyupBehavior;\nconst postKeyupBehavior = [// AltGraph produces an extra keyup for Control\n// The modifier does not change\n{\n  matches: keyDef => keyDef.key === 'AltGraph',\n  handle: (keyDef, element, options, state) => {\n    var _options$keyboardMap$2;\n\n    const ctrlKeyDef = (_options$keyboardMap$2 = options.keyboardMap.find(k => k.key === 'Control')) != null ? _options$keyboardMap$2 :\n    /* istanbul ignore next */\n    {\n      key: 'Control',\n      code: 'Control'\n    };\n\n    _dom.fireEvent.keyUp(element, (0, _getEventProps.getKeyEventProps)(ctrlKeyDef, state));\n  }\n}];\nexports.postKeyupBehavior = postKeyupBehavior;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}