{"ast":null,"code":"import _slicedToArray from\"C:/Users/user/Desktop/git/toy/src/main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{Link}from\"react-router-dom\";import Pagination from\"react-js-pagination\";import axios from\"axios\";import Paging from\"./Paging\";import\"../css/board-list.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function BoardList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),posts=_useState2[0],setPosts=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setCount=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),currentPosts=_useState6[0],setCurrentPosts=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),page=_useState8[0],setPage=_useState8[1];// 현재 페이지\nvar _useState9=useState(20),_useState10=_slicedToArray(_useState9,2),postPerPages=_useState10[0],setPostPerPages=_useState10[1];var indexOfLastPost=page*postPerPages;var indexOfFirstPost=indexOfLastPost-postPerPages;var pageChangeHandler=function pageChangeHandler(page){setPage(page);};// const pageChangeHandler = async (page) => {\n//   // window.location.replace(`/board/list?page=${page}`);\n//   setPage(page);\n//   await axios\n//     .get(\"/api/board/list\")\n//     .then((res) => {\n//       setList(res.data.slice((page - 1) * 20, (page - 1) * 20 + 20));\n//       setCount(res.data.length);\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     });\n// };\n// const pageChangeHandler = async (page) => {\n// window.location.replace(`/board/list?page=${page}`);\n// setPage(page);\n// await axios\n//   .get(\"/api/board/list\")\n//   .then((res) => {\n//     setList(res.data);\n//     setCount(list.slice(indexOfFirstPost, indexOfLastPost));\n//   })\n//   .catch((err) => {\n//     console.log(err);\n//   });\n// };\n/** 초기 상태 */ // const getList = async () => {\n//   await axios\n//     .get(\"/api/board/list\")\n//     .then((res) => {\n//       setList(res.data.slice(0, 20));\n//       setCount(res.data.length);\n//     })\n//     .catch((err) => {\n//       console.log(err);\n//     });\n// };\n// axios\n//   .get(\"/api/board/list\")\n//   .then((res) => {\n//     setList(res.data.slice((page - 1) * 20, (page - 1) * 20 + 20));\n//     setCount(res.data.length);\n//   })\n//   .catch((err) => {\n//     console.log(err);\n//   });\naxios.get(\"api/board/list\").then(function(res){setPosts(res.data);setCurrentPosts(posts.slice(indexOfFirstPost,indexOfLastPost));});useEffect(function(){axios.get(\"api/board/list\").then(function(res){setPosts(res.data);setCurrentPosts(posts.slice(indexOfFirstPost,indexOfLastPost));});},[indexOfFirstPost,indexOfLastPost]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"table\",{class:\"board_list_table\",children:currentPosts.map(function(list,idx){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"tr\",{class:\"board_list\",children:/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/detail/\".concat(list[idx].id),onClick:function onClick(){axios.get(\"/api/board/detail/\".concat(list[idx].id)).then(function(res){console.log(res.data);});},children:list[idx].title}),/*#__PURE__*/_jsxs(\"td\",{children:[\"\\uC544\\uC774\\uB514 : \",list[idx].id,\" ---\"]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"\\uC2A4\\uD0AC\",list[idx].skillStack]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"\\uBD84\\uC57C\",list[idx].workField]}),/*#__PURE__*/_jsx(\"td\",{children:list[idx].maxPeople})]})})});})}),/*#__PURE__*/_jsx(Paging,{totalCount:posts.length,postPerPage:postPerPages,pageRangeDisplayed:5,pageChangeHandler:pageChangeHandler,page:page})]});}export default BoardList;","map":{"version":3,"names":["React","useEffect","useState","Link","Pagination","axios","Paging","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BoardList","_useState","_useState2","_slicedToArray","posts","setPosts","_useState3","_useState4","count","setCount","_useState5","_useState6","currentPosts","setCurrentPosts","_useState7","_useState8","page","setPage","_useState9","_useState10","postPerPages","setPostPerPages","indexOfLastPost","indexOfFirstPost","pageChangeHandler","get","then","res","data","slice","children","class","map","list","idx","to","concat","id","onClick","console","log","title","skillStack","workField","maxPeople","totalCount","length","postPerPage","pageRangeDisplayed"],"sources":["C:/Users/user/Desktop/git/toy/src/main/frontend/src/components/BoardList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport axios from \"axios\";\r\nimport Paging from \"./Paging\";\r\nimport \"../css/board-list.css\";\r\n\r\nfunction BoardList() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [currentPosts, setCurrentPosts] = useState([]);\r\n  const [page, setPage] = useState(1); // 현재 페이지\r\n  const [postPerPages, setPostPerPages] = useState(20);\r\n  const indexOfLastPost = page * postPerPages;\r\n  const indexOfFirstPost = indexOfLastPost - postPerPages;\r\n\r\n  const pageChangeHandler = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  // const pageChangeHandler = async (page) => {\r\n  //   // window.location.replace(`/board/list?page=${page}`);\r\n  //   setPage(page);\r\n  //   await axios\r\n  //     .get(\"/api/board/list\")\r\n  //     .then((res) => {\r\n  //       setList(res.data.slice((page - 1) * 20, (page - 1) * 20 + 20));\r\n  //       setCount(res.data.length);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n  // const pageChangeHandler = async (page) => {\r\n  // window.location.replace(`/board/list?page=${page}`);\r\n  // setPage(page);\r\n  // await axios\r\n  //   .get(\"/api/board/list\")\r\n  //   .then((res) => {\r\n  //     setList(res.data);\r\n  //     setCount(list.slice(indexOfFirstPost, indexOfLastPost));\r\n  //   })\r\n  //   .catch((err) => {\r\n  //     console.log(err);\r\n  //   });\r\n  // };\r\n  /** 초기 상태 */\r\n  // const getList = async () => {\r\n  //   await axios\r\n  //     .get(\"/api/board/list\")\r\n  //     .then((res) => {\r\n  //       setList(res.data.slice(0, 20));\r\n  //       setCount(res.data.length);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n  // axios\r\n  //   .get(\"/api/board/list\")\r\n  //   .then((res) => {\r\n  //     setList(res.data.slice((page - 1) * 20, (page - 1) * 20 + 20));\r\n  //     setCount(res.data.length);\r\n  //   })\r\n  //   .catch((err) => {\r\n  //     console.log(err);\r\n  //   });\r\n  axios.get(\"api/board/list\").then((res) => {\r\n    setPosts(res.data);\r\n    setCurrentPosts(posts.slice(indexOfFirstPost, indexOfLastPost));\r\n  });\r\n  useEffect(() => {\r\n    axios.get(\"api/board/list\").then((res) => {\r\n      setPosts(res.data);\r\n      setCurrentPosts(posts.slice(indexOfFirstPost, indexOfLastPost));\r\n    });\r\n  }, [indexOfFirstPost, indexOfLastPost]);\r\n\r\n  return (\r\n    <>\r\n      <table class=\"board_list_table\">\r\n        {currentPosts.map(function (list, idx) {\r\n          return (\r\n            <>\r\n              <tr class=\"board_list\">\r\n                <td>\r\n                  <Link\r\n                    to={`/detail/${list[idx].id}`}\r\n                    onClick={() => {\r\n                      axios\r\n                        .get(`/api/board/detail/${list[idx].id}`)\r\n                        .then((res) => {\r\n                          console.log(res.data);\r\n                        });\r\n                    }}\r\n                  >\r\n                    {list[idx].title}\r\n                  </Link>\r\n                  <td>아이디 : {list[idx].id} ---</td>\r\n                  <td>스킬{list[idx].skillStack}</td>\r\n                  <td>분야{list[idx].workField}</td>\r\n                  <td>{list[idx].maxPeople}</td>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          );\r\n        })}\r\n      </table>\r\n      <Paging\r\n        totalCount={posts.length}\r\n        postPerPage={postPerPages}\r\n        pageRangeDisplayed={5}\r\n        pageChangeHandler={pageChangeHandler}\r\n        page={page}\r\n      />\r\n\r\n      {/* <Pagination\r\n        className=\"pagination\"\r\n        activePage={page}\r\n        itemsCountPerPage={20}\r\n        totalItemsCount={count}\r\n        pageRangeDisplayed={5}\r\n        prevPageText={\"<\"}\r\n        nextPageText={\">\"}\r\n        onChange={pageChangeHandler}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\nexport default BoardList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}