{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\git\\\\toy\\\\src\\\\main\\\\frontend\\\\src\\\\components\\\\BoardList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Post from \"./Post\";\nimport axios from \"axios\";\nimport Paging from \"./Paging\";\nimport \"../css/board-list.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BoardList() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentPosts, setCurrentPosts] = useState([]);\n  const [page, setPage] = useState(1); // 현재 페이지\n  const [postPerPage] = useState(20);\n  const [Loding, setLoading] = useState(false);\n  const indexOfLastPost = page * postPerPage;\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\n  const pageChangeHandler = page => {\n    setPage(page);\n  };\n\n  // const pageChangeHandler = async (page) => {\n  //   // window.location.replace(`/board/list?page=${page}`);\n  //   setPage(page);\n  //   await axios\n  //     .get(\"/api/board/list\")\n  //     .then((res) => {\n  //       setList(res.data.slice((page - 1) * 20, (page - 1) * 20 + 20));\n  //       setCount(res.data.length);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  // const pageChangeHandler = async (page) => {\n  // window.location.replace(`/board/list?page=${page}`);\n  // setPage(page);\n  // await axios\n  //   .get(\"/api/board/list\")\n  //   .then((res) => {\n  //     setList(res.data);\n  //     setCount(list.slice(indexOfFirstPost, indexOfLastPost));\n  //   })\n  //   .catch((err) => {\n  //     console.log(err);\n  //   });\n  // };\n  /** 초기 상태 */\n  // const getList = async () => {\n  //   await axios\n  //     .get(\"/api/board/list\")\n  //     .then((res) => {\n  //       setList(res.data.slice(0, 20));\n  //       setCount(res.data.length);\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  // axios\n  //   .get(\"/api/board/list\")\n  //   .then((res) => {\n  //     setList(res.data.slice((page - 1) * 20, (page - 1) * 20 + 20));\n  //     setCount(res.data.length);\n  //   })\n  //   .catch((err) => {\n  //     console.log(err);\n  //   });\n  const getPosts = async () => {\n    setLoading(true);\n    await axios.get(\"/api/board/list\").then(res => {\n      setPosts(res.data);\n      console.log(posts);\n      setCurrentPosts(posts.slice(indexOfFirstPost, indexOfLastPost));\n      console.log(currentPosts);\n    });\n    setLoading(false);\n  };\n  useEffect(() => {\n    getPosts();\n  }, [indexOfFirstPost, indexOfLastPost, page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Post, {\n      posts: currentPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paging, {\n      totalCount: posts.length,\n      postPerPage: postPerPage,\n      pageRangeDisplayed: 5,\n      pageChangeHandler: pageChangeHandler,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BoardList, \"+6Uz2IbLrxJWjci0Bfl3yIQ4PpQ=\");\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Post","axios","Paging","jsxDEV","_jsxDEV","Fragment","_Fragment","BoardList","_s","posts","setPosts","currentPosts","setCurrentPosts","page","setPage","postPerPage","Loding","setLoading","indexOfLastPost","indexOfFirstPost","pageChangeHandler","getPosts","get","then","res","data","console","log","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","totalCount","length","pageRangeDisplayed","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/git/toy/src/main/frontend/src/components/BoardList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Post from \"./Post\";\r\nimport axios from \"axios\";\r\nimport Paging from \"./Paging\";\r\nimport \"../css/board-list.css\";\r\n\r\nfunction BoardList() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentPosts, setCurrentPosts] = useState([]);\r\n  const [page, setPage] = useState(1); // 현재 페이지\r\n  const [postPerPage] = useState(20);\r\n  const [Loding, setLoading] = useState(false);\r\n  const indexOfLastPost = page * postPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postPerPage;\r\n\r\n  const pageChangeHandler = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  // const pageChangeHandler = async (page) => {\r\n  //   // window.location.replace(`/board/list?page=${page}`);\r\n  //   setPage(page);\r\n  //   await axios\r\n  //     .get(\"/api/board/list\")\r\n  //     .then((res) => {\r\n  //       setList(res.data.slice((page - 1) * 20, (page - 1) * 20 + 20));\r\n  //       setCount(res.data.length);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n  // const pageChangeHandler = async (page) => {\r\n  // window.location.replace(`/board/list?page=${page}`);\r\n  // setPage(page);\r\n  // await axios\r\n  //   .get(\"/api/board/list\")\r\n  //   .then((res) => {\r\n  //     setList(res.data);\r\n  //     setCount(list.slice(indexOfFirstPost, indexOfLastPost));\r\n  //   })\r\n  //   .catch((err) => {\r\n  //     console.log(err);\r\n  //   });\r\n  // };\r\n  /** 초기 상태 */\r\n  // const getList = async () => {\r\n  //   await axios\r\n  //     .get(\"/api/board/list\")\r\n  //     .then((res) => {\r\n  //       setList(res.data.slice(0, 20));\r\n  //       setCount(res.data.length);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err);\r\n  //     });\r\n  // };\r\n  // axios\r\n  //   .get(\"/api/board/list\")\r\n  //   .then((res) => {\r\n  //     setList(res.data.slice((page - 1) * 20, (page - 1) * 20 + 20));\r\n  //     setCount(res.data.length);\r\n  //   })\r\n  //   .catch((err) => {\r\n  //     console.log(err);\r\n  //   });\r\n  const getPosts = async () => {\r\n    setLoading(true);\r\n    await axios.get(\"/api/board/list\").then((res) => {\r\n      setPosts(res.data);\r\n      console.log(posts);\r\n      setCurrentPosts(posts.slice(indexOfFirstPost, indexOfLastPost));\r\n      console.log(currentPosts);\r\n    });\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [indexOfFirstPost, indexOfLastPost, page]);\r\n\r\n  return (\r\n    <>\r\n      <Post posts={currentPosts} />\r\n      <Paging\r\n        totalCount={posts.length}\r\n        postPerPage={postPerPage}\r\n        pageRangeDisplayed={5}\r\n        pageChangeHandler={pageChangeHandler}\r\n        page={page}\r\n      />\r\n\r\n      {/* <Pagination\r\n        className=\"pagination\"\r\n        activePage={page}\r\n        itemsCountPerPage={20}\r\n        totalItemsCount={count}\r\n        pageRangeDisplayed={5}\r\n        prevPageText={\"<\"}\r\n        nextPageText={\">\"}\r\n        onChange={pageChangeHandler}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\nexport default BoardList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACkB,MAAM,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAMoB,eAAe,GAAGL,IAAI,GAAGE,WAAW;EAC1C,MAAMI,gBAAgB,GAAGD,eAAe,GAAGH,WAAW;EAEtD,MAAMK,iBAAiB,GAAIP,IAAI,IAAK;IAClCC,OAAO,CAACD,IAAI,CAAC;EACf,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3BJ,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMhB,KAAK,CAACqB,GAAG,CAAC,iBAAiB,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAC/Cd,QAAQ,CAACc,GAAG,CAACC,IAAI,CAAC;MAClBC,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;MAClBG,eAAe,CAACH,KAAK,CAACmB,KAAK,CAACT,gBAAgB,EAAED,eAAe,CAAC,CAAC;MAC/DQ,OAAO,CAACC,GAAG,CAAChB,YAAY,CAAC;IAC3B,CAAC,CAAC;IACFM,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdwB,QAAQ,EAAE;EACZ,CAAC,EAAE,CAACF,gBAAgB,EAAED,eAAe,EAAEL,IAAI,CAAC,CAAC;EAE7C,oBACET,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACEzB,OAAA,CAACJ,IAAI;MAACS,KAAK,EAAEE;IAAa;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC7B7B,OAAA,CAACF,MAAM;MACLgC,UAAU,EAAEzB,KAAK,CAAC0B,MAAO;MACzBpB,WAAW,EAAEA,WAAY;MACzBqB,kBAAkB,EAAE,CAAE;MACtBhB,iBAAiB,EAAEA,iBAAkB;MACrCP,IAAI,EAAEA;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACX;EAAA,gBAYD;AAEP;AAACzB,EAAA,CAlGQD,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAmGlB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}